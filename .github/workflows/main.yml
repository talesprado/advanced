# This is a basic workflow to help you get started with Actions

name: VVS - Projeto Final

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2 
      
      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql root password: ${{ secrets.DB_ROOT_PASS }}
          mysql database: 'vvs_test'
          mysql user: 'pradota'
          mysql password: ${{ secrets.DB_ROOT_PASS }}
          
      - name: Configure Yii project
        run: |
          composer update
          php ./init --env=Development --overwrite=All --delete=All
          cp ./common/config/git-local.php ./common/config/main-local.php
          cp ./common/config/git-local.php ./common/config/test-local.php
          cd ./common/config          
              
      - name: Yii database migrate
        run: |
          php ./yii migrate --interactive=0
          php ./yii_test migrate --interactive=0

      - name: Run Unit and Functional Tests
        run: | 
          vendor/bin/codecept run          
      
      - name: Setup Java JDK
        uses: actions/setup-java@v2.2.0
        with:
          java-version: '15'
          distribution: 'adopt'
                       
      - name: Prepare Aceptance Environment
        run: |         
          wget https://selenium-release.storage.googleapis.com/3.7/selenium-server-standalone-3.7.0.jar
          java -jar selenium-server-standalone-3.7.0.jar &
          php -S 127.0.0.1:8080 -t frontend/web &  
          npm install -g selenium-side-runner
          npm install -g geckodriver
          
      - name: Run Acceptance
        run: |
          MOZ_HEADLESS=1 selenium-side-runner -c "browserName=firefox" advanced.side
          
  publish:
    runs-on: ./
    needs: build
    
    steps:
      - name: Publica
        run: echo "Aqui o site seria publicado via ftp"
        
          
    
          
